from langchain_groq import ChatGroq
from langgraph.checkpoint.memory import InMemorySaver
from langgraph.prebuilt import create_react_agent
from config import LLM_MODEL_NAME, SYSTEM_PROMPT
from agent.tools import get_agent_tools
def create_agent():
    """
    Táº¡o ra má»™t AI agent vá»›i LangGraph cÃ³ kháº£ nÄƒng sá»­ dá»¥ng cÃ´ng cá»¥ vÃ  ghi nhá»› há»™i thoáº¡i.
    """
    # 1. Khá»Ÿi táº¡o model LLM tá»« Groq
    model = ChatGroq(
        model=LLM_MODEL_NAME,
        temperature=0.7,
        max_tokens=2048
    )

    # 2. Láº¥y cÃ¡c cÃ´ng cá»¥ Ä‘Ã£ Ä‘á»‹nh nghÄ©a (á»Ÿ Ä‘Ã¢y lÃ  RAG tool)
    tools = get_agent_tools()

    # 3. Thiáº¿t láº­p bá»™ nhá»› cho há»™i thoáº¡i
    memory = InMemorySaver()

    # 4. Sá»­ dá»¥ng hÃ m create_react_agent Ä‘á»ƒ táº¡o má»™t agent hoÃ n chá»‰nh
    # Agent nÃ y cÃ³ kháº£ nÄƒng tá»± suy luáº­n (ReAct) Ä‘á»ƒ quyáº¿t Ä‘á»‹nh khi nÃ o cáº§n dÃ¹ng tool
    agent_executor = create_react_agent(
        model=model,
        tools=tools,
        prompt=SYSTEM_PROMPT, # Sá»­ dá»¥ng system prompt Ä‘Ã£ Ä‘á»‹nh nghÄ©a
        checkpointer=memory,
    )
    
    print("ðŸ¤– Agent Ä‘Ã£ Ä‘Æ°á»£c táº¡o vÃ  sáºµn sÃ ng.")
    return agent_executor

# Táº¡o agent má»™t láº§n khi á»©ng dá»¥ng khá»Ÿi Ä‘á»™ng
agent_executor = create_agent()